Matrix divided tests

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> from sys import maxsize


>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test 2:
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -1)
[[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]

Test 3:
>>> matrix_divided([[3, 3.0, 3.5], [-2.0, 1, 10]], 2)
[[1.5, 1.5, 1.75], [-1.0, 0.5, 5.0]]


>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
    ....
ZeroDivisionError: division by zero


>>> matrix_divided("asd", 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided([[1, 2, 3], ["a", "b", "c"]], 10)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided([["a", 2, 3], [4, 5, 6]], 10)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided([[1, 2], [3, 4, 5]], 1)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size


>>> matrix_divided(None, 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided([[1, 2, 20], [3, 4, 5]], None)
Traceback (most recent call last):
    ...
TypeError: div must be a number


>> matrix_divided([[1, 2, 3], [3, 4, 5]], "div")
Traceback (most recent call last):
    ...
TypeError: div must be a number


>>> matrix_divided([[1, 2, 3], (1, 2, 3), "hhh"], 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided([[1, 2, 3], [3, 4, 5]])
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'


>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float("inf"))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
