>>> add_integer = __import__('0-add_integer').add_integer

Test 1:
>>> add_integer(10, 10)
20

Test 2:
>>> add_integer(-3, 3)
0

Test 3:
>>> add_integer(1, "h")
Traceback (most recent call last):
TypeError: b must be an integer

Test 4:
>>> add_integer("h", 1)
Traceback (most recent call last):
TypeError: a must be an integer

Test 5:
>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

Test 6:
>>> add_integer(1, None)
Traceback (most recent call last):
TypeError: b must be an integer

Test 7:
>>> add_integer(None, None)
Traceback (most recent call last):
TypeError: a must be an integer

Test 8:
>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

Test 9:
>>> add_integer(1, 2, 3)
Traceback (most recent call last):
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

>>> add_integer(float('inf'), float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(float('nan'), 1)
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
